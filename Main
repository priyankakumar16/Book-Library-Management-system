/*
Project Title: Book Library Management System
Version : 1.0
Developed By : Priyanka Kumar
School : Delhi Public School, R.K. Puram
*/
#include<fstream.h>
#include<conio.h>
#include<stdio.h>
#include<string.h>
#include<ctype.h>
void Add();
void Display();
void Issue();
void Return();
void Search();
void Edit();
void Delete();
void main()
{
clrscr();
cout<<"Welcome Admin"<<endl;
int z,choice;
cout<<"Press 1 and Enter key to continue:";
cin>>z;
clrscr();
do
{
cout<<"1) Add 2) Display\n";
cout<<"3) Issue 4) Return\n";
cout<<"5) Search 6) Edit\n";
cout<<"7) Delete 8) Quit\n";
cout<<"Enter choice:";
cin>>choice;
clrscr();
switch(choice)
{
case 1 :Add();break;
case 2 :Display();break;
case 3 :Issue();break;
case 4 :Return();break;
case 5 :Search();break;
case 6 :Edit();break;
case 7 :Delete();break;
case 8 :cout<<"Quiting...press any key";
}
}while(choice<8);
getch();
}
class Book
{
int Bno;
char Bname[40],Author[40],Status[10];
public:
void Enter();
char* RAuthor();
int RBno();
char* RBname();
char* RStatus();
void Editbname();
void Editbno();
void Editauthor();
void Editstats();
void Display();
};
class Member
{
int Mno,Mbno;
char Mname[40],Status[5];
public:
void Input();
int RMno();
int RMbno();
char* RMname();
char* RStatus();
void Editmname();
void Editmno();
void Editstats(int);
void Display();
};
void Book::Enter()
{
cout<<"Enter book no: ";
cin>>Bno;
cout<<"Enter Book name: ";
gets(Bname);
cout<<"Enter Author's name: ";
gets(Author);
strcpy(Status,"Present");
}
void Book::Display()
{
cout<<"Bno:"<<Bno<<endl;
cout<<"Bname:"<<Bname<<endl;
cout<<"Author:"<<Author<<endl;
cout<<"Status:"<<Status<<endl;
}
int Book::RBno()
{
return Bno;
}
char* Book::RAuthor()
{
return Author;
}
char* Book::RBname()
{
return Bname;
}
char* Book::RStatus()
{
return Status;
}
void Book::Editbname()
{
char name[20];
cout<<"Enter corrected name:";
gets(name);
strcpy(Bname,name);
}
void Book::Editbno()
{
int bno;
cout<<"Enter corrected bno:";
cin>>bno;
Bno=bno;
}
void Book::Editauthor()
{
char author[20];
cout<<"Enter corrected author name:";
gets(author);
strcpy(Author,author);
}
void Book::Editstats()
{
if(strcmpi(Status,"Present")==0)
strcpy(Status,"Taken");
else
if(strcmpi(Status,"Taken")==0)
strcpy(Status,"Present");
}
void Member::Input()
{
cout<<"Enter Member no: ";
cin>>Mno;
cout<<"Enter Member name:";
gets(Mname);
strcpy(Status,"Nil");
Mbno=0;
}
void Member::Display()
{
cout<<"Mno:"<<Mno<<endl;
cout<<"Mname:"<<Mname<<endl;
cout<<"Status:"<<Status<<endl;
}
int Member::RMno()
{
return Mno;
}
int Member::RMbno()
{
return Mbno;
}
char* Member::RMname()
{
return Mname;
}
char* Member::RStatus()
{
return Status;
}
void Member::Editmname()
{
char name[20];
cout<<"Enter corrected name:";
gets(name);
strcpy(Mname,name);
}
void Member::Editmno()
{
int mno;
cout<<"Enter corrected mno:";
cin>>mno;
Mno=mno;
}
void Member::Editstats(int x)
{
if(strcmpi(Status,"Nil")==0)
strcpy(Status,"Full");
else
if(strcmpi(Status,"Full")==0)
strcpy(Status,"Nil");
if(!Mbno)
Mbno=x;
else
if(Mbno!=0)
Mbno=0;
}
void AddBook()
{
fstream F;
F.open("Library.dat",ios::binary|ios::app);
Book b;
char reply;
do
{
b.Enter();
F.write((char*)&b,sizeof(b));
cout<<"Add more books(Y/N):";
cin>>reply;
}while(toupper(reply)=='Y');
F.close();
}
void AddMember()
{
fstream G;
G.open("Members.dat",ios::binary|ios::app);
Member m;
char reply;
do
{
cout<<"Enter details of members:"<<endl;
m.Input();
G.write((char*)&m,sizeof(m));
cout<<"Add more members(Y/N):";
cin>>reply;
}while(toupper(reply)=='Y');
G.close();
}
int IssueBname()
{
Book b;
fstream F;
F.open("Library.dat",ios::in|ios::binary|ios::out);
int cnt=0,Mbno;
char book[40];
cout<<"Enter name of book:";
gets(book);
while(!cnt&&F.read((char*)&b,sizeof(b)))
{
if(strcmpi(b.RBname(),book)==0)
{
cnt++;
if(strcmpi(b.RStatus(),"Present")==0)
{
Mbno=b.RBno();
cout<<"Book is available"<<endl;
cout<<"Book issued to memeber"<<endl;
int n=F.tellg()-sizeof(b);
F.seekg(n);
b.Editstats();
F.write((char*)&b,sizeof(b));
F.close();
}
else cout<<"Book is taken"<<endl;
}
}
if(cnt==0)
cout<<"Book does not exist"<<endl;
return Mbno;
}
int IssueAuthor()
{
fstream F;
Book b;
F.open("Library.dat",ios::in|ios::out|ios::binary);
char author[40];
int cnt=0,Mbno;
cout<<"Enter name of author:";
gets(author);
while(!cnt&&F.read((char*)&b,sizeof(b)))
{
if(strcmpi(b.RAuthor(),author)==0)
{
cnt++;
if(strcmpi(b.RStatus(),"Pr")==0)
{
Mbno=b.RBno();
cout<<"Book is available"<<endl;
cout<<"Book issued to member"<<endl;
int n=F.tellg()-sizeof(b);
F.seekg(n);
b.Editstats();
F.write((char*)&b,sizeof(b));
F.close();
}
else cout<<"Book is taken"<<endl;
}
}
if(cnt==0)
cout<<"Book does not exist"<<endl;
return Mbno;
}
void IssueMname()
{
fstream G;Member m;
G.open("Members.dat",ios::in|ios::out|ios::binary);
char member[40];int count=0,Mbno;
cout<<"Enter Member's name:";
gets(member);
while(!count&&G.read((char*)&m,sizeof(m)))
{
if(strcmpi(m.RMname(),member)==0)
{
count++;
if(strcmpi(m.RStatus(),"Nil")==0)
{
cout<<"Member can borrow book"<<endl;
cout<<"1)Serach by BName 2)Search by Author"<<endl;
cout<<"Enter choice:";
int choice;
cin>>choice;
if(choice==1)
Mbno=IssueBname();
else
if(choice==2)
Mbno=IssueAuthor();
}
else
cout<<"Member has a book/cant borrow"<<endl;
}
}
if(count==1)
{
int j=G.tellg()-sizeof(m);
G.seekg(j);
m.Editstats(Mbno);
G.write((char*)&m,sizeof(m));
G.close();
}
else if(!count)
cout<<"Member not found"<<endl;
}
void IssueMno()
{
fstream G;
Member m;
int count=0;
G.open("Members.dat",ios::binary|ios::in|ios::out);
int mno,Mbno;
cout<<"Enter Member's number:";
cin>>mno;
while(!count&&G.read((char*)&m,sizeof(m)))
{
if(m.RMno()==mno)
{
count++;
if(strcmpi(m.RStatus(),"Nil")==0)
{
cout<<"Member can borrow book"<<endl;
cout<<"1)Serach by BName 2)Search by Author"<<endl;
int choice;
cout<<"Enter choice:";
cin>>choice;
if(choice==1)
Mbno=IssueBname();
else
if(choice==2)
Mbno=IssueAuthor();
}
else
cout<<"Member has a book/cant borrow"<<endl;
}
}
if(count==1)
{
int j=G.tellg()-sizeof(m);
G.seekg(j);
m.Editstats(Mbno);
G.write((char*)&m,sizeof(m));
G.close();
}
else
if(!count)
cout<<"Member not found"<<endl;
}
void ReturnMname()
{
fstream G,F;
Book b;
Member m;
F.open("Library.dat",ios::in|ios::out|ios::binary);
G.open("Members.dat",ios::in|ios::out|ios::binary);
int count=0;
char mname[40];
cout<<"Enter member name:";
gets(mname);
while(!count&&G.read((char*)&m,sizeof(m)))
{
if(strcmpi(mname,m.RMname())==0)
{
count++;
cout<<"Book returned to library"<<endl;
int Bno=m.RMbno(),cnt=0;
while(!cnt&&F.read((char*)&b,sizeof(b)))
{
if(b.RBno()==Bno)
{
cnt++;
int a=F.tellg()-sizeof(b);
F.seekp(a);
b.Editstats();
F.write((char*)&b,sizeof(b));
}
}
F.close();
int n=G.tellg()-sizeof(m);
G.seekg(n);
m.Editstats(3);
G.write((char*)&m,sizeof(m));
}
}
G.close();
}
void ReturnMno()
{
fstream F,G;
Member m;
Book b;
F.open("Library.dat",ios::in|ios::out|ios::binary);
G.open("Members.dat",ios::in|ios::out|ios::binary);
int count=0,mno;
cout<<"Enter member no:";
cin>>mno;
while(!count&&G.read((char*)&m,sizeof(m)))
{
if(m.RMno()==mno)
{
count++;
cout<<"Book returned to library"<<endl;
int Bno=m.RMbno(),cnt=0;
while(!cnt&&F.read((char*)&b,sizeof(b)))
{
if(b.RBno()==Bno)
{
cnt++;
int a=F.tellg()-sizeof(b);
F.seekg(a);
b.Editstats();
F.write((char*)&b,sizeof(b));
}
}
F.close();
int n=G.tellg()-sizeof(m);
G.seekg(n);
m.Editstats(3);
G.write((char*)&m,sizeof(m));
}
}
G.close();
}
void DelBname()
{
fstream F,G;
int count=0;Book b;
F.open("Library.dat",ios::in|ios::binary);
G.open("Deleted.dat",ios::out|ios::binary);
char Bname[40];
cout<<"Enter book name to be deleted:";
gets(Bname);
while(F.read((char*)&b,sizeof(b)))
{
if(strcmpi(b.RBname(),Bname)==0)
count++;
else
G.write((char*)&b,sizeof(b));
}
F.close();
G.close();
if(count==1)
cout<<"Book deleted"<<endl;
else
if(count==0)
cout<<"Book not found"<<endl;
remove("Library.dat");
rename("Deleted.dat","Library.dat");
}
void DelAuthor()
{
fstream F,G;
int count=0;
Book b;
F.open("Library.dat",ios::in|ios::binary);
G.open("Deleted.dat",ios::out|ios::binary);
char author[40];
cout<<"Enter author name of book to be deleted:";
gets(author);
while(F.read((char*)&b,sizeof(b)))
{
if(strcmpi(b.RAuthor(),author)==0)
count++;
else
G.write((char*)&b,sizeof(b));
}
F.close();
G.close();
if(count==1)
cout<<"Book deleted"<<endl;
else
if(count==0)
cout<<"Book not found"<<endl;
remove("Library.dat");
rename("Deleted.dat","Library.dat");
}
void DeleteBook()
{
int choice;
cout<<"1)Search by Bname 2)Search by Author"<<endl;
cout<<"Enter choice:";
cin>>choice;
if(choice==1)
DelBname();
else
if(choice==2)
DelAuthor();
}
void DelMname()
{
fstream F,G;
int count=0;
Member m;
F.open("Members.dat",ios::in|ios::binary);
G.open("Deleted.dat",ios::out|ios::binary);
char Mname[40];
cout<<"Enter member name to be deleted:";
gets(Mname);
while(F.read((char*)&m,sizeof(m)))
{
if(strcmpi(m.RMname(),Mname)==0)
count++;
else
G.write((char*)&m,sizeof(m));
}
F.close();
G.close();
if(count==1) cout<<"Member deleted"<<endl;
else if(count==0) cout<<"Member not found"<<endl;
remove("Members.dat");
rename("Deleted.dat","Members.dat");
}
void DelMno()
{
fstream F,G;
int count=0;
Member m;
F.open("Members.dat)",ios::in|ios::binary);
G.open("Deleted.dat)",ios::out|ios::binary);
int mno;
cout<<"Enter Member no. to be deleted:";
cin>>mno;
while(F.read((char*)&m,sizeof(m)))
{
if(m.RMno()==mno)
count++;
else
G.write((char*)&m,sizeof(m));
}
F.close();
G.close();
if(count==1) cout<<"Member deleted"<<endl;
else
if(count==0)
cout<<"Member not found"<<endl;
remove("Members.dat");
rename("Deleted.dat","Members.dat");
}
void DeleteMem()
{
int choice;
cout<<"1)Search by Mname 2)Search by Mno"<<endl;
cout<<"Enter choice:";
cin>>choice;
if(choice==1)
DelMname();
else
if(choice==2)
DelMno();
}
void DisplayBooks()
{
fstream F;
F.open("Library.dat",ios::in|ios::binary);
Book b;
while(F.read((char*)&b,sizeof(b)))
b.Display();
F.close();
}
void DisplayMem()
{
fstream F;
F.open("Members.dat",ios::in|ios::binary);
Member b;
while(F.read((char*)&b,sizeof(b)))
b.Display();
F.close();
}
void SDbname()
{
fstream F;
Book b;
F.open("Library.dat",ios::in|ios::out|ios::binary);
char bname[20];
cout<<"Enter book name to be searched:";
gets(bname);
while(F.read((char*)&b,sizeof(b)))
{
if(strcmpi(b.RBname(),bname)==0)
b.Display();
}
F.close();
}
void SDbno()
{
fstream F;
Book b;
F.open("Library.dat",ios::in|ios::out|ios::binary);
int bno;
cout<<"Enter book no to be searched:";
cin>>bno;
while(F.read((char*)&b,sizeof(b)))
{
if(b.RBno()==bno)
b.Display();
}
F.close();
}
void SDauthor()
{
fstream F;
Book b;
F.open("Library.dat",ios::in|ios::out|ios::binary);
char author[20];
cout<<"Enter author of book to be searched:";
gets(author);
while(F.read((char*)&b,sizeof(b)))
{
if(strcmpi(b.RAuthor(),author)==0)
b.Display();
}
F.close();
}
void SDbookAb()
{
fstream F;
Book b;
F.open("Library.dat",ios::in|ios::out|ios::binary);
while(F.read((char*)&b,sizeof(b)))
{
if(strcmpi(b.RStatus(),"Taken")==0)
b.Display();
}
F.close();
}
void SDbookPr()
{
fstream F;Book b;
F.open("Library.dat",ios::in|ios::out|ios::binary);
while(F.read((char*)&b,sizeof(b)))
{
if(strcmpi(b.RStatus(),"Present")==0)
b.Display();
}
F.close();
}
void SDbstat()
{
int choice;
cout<<"Search and display books:"<<endl;
cout<<"1)Taken 2)Not taken"<<endl;
cout<<"Enter choice:";
cin>>choice;
if(choice==1)
SDbookAb();
else
if(choice==2)
SDbookPr();
}
void SDisBook()
{
int choice;
cout<<"Search book by"<<endl;
cout<<"1)Bname 2)Bno"<<endl;
cout<<"3)Author 4)Status"<<endl;
cout<<"Enter choice:";
cin>>choice;
if(choice==1)
SDbname();
else
if(choice==2)
SDbno();
else
if(choice==3)
SDauthor();
else
if(choice==4)
SDbstat();
}
void SDmname()
{
fstream G;Member m;
G.open("Members.dat",ios::in|ios::out|ios::binary);
char mname[20];
cout<<"Enter member name to be searched:";
gets(mname);
while(G.read((char*)&m,sizeof(m)))
{
if(strcmpi(m.RMname(),mname)==0)
m.Display();
}
G.close();
}
void SDmno()
{
fstream G;Member m;
G.open("Members.dat",ios::in|ios::out|ios::binary);
int mno;
cout<<"Enter member no to be searched:";
cin>>mno;
while(G.read((char*)&m,sizeof(m)))
{
if(m.RMno()==mno)
m.Display();
}
G.close();
}
void SDmemF()
{
fstream G;Member m;
G.open("Members.dat",ios::in|ios::out|ios::binary);
while(G.read((char*)&m,sizeof(m)))
{
if(strcmpi(m.RStatus(),"Full")==0)
m.Display();
}
G.close();
}
void SDmemN()
{
fstream G;
Member m;
G.open("Members.dat",ios::in|ios::out|ios::binary);
while(G.read((char*)&m,sizeof(m)))
{
if(strcmpi(m.RStatus(),"Nil")==0)
m.Display();
}
G.close();
}
void SDmstat()
{
int choice;
cout<<"Search and display members:"<<endl;
cout<<"1)With book 2)Without book"<<endl;
cout<<"Enter choice:";
cin>>choice;
if(choice==1)
SDmemF();
else
if(choice==2)
SDmemN();
}
void SDisMem()
{
int choice;
cout<<"Search member by"<<endl;
cout<<"1) Mname 2) Mno 3) Status"<<endl;
cout<<"Enter choice:";
cin>>choice;
if(choice==1)
SDmname();
else
if(choice==2)
SDmno();
else
if(choice==3)
SDmstat();
}
void EditBnameBno()
{
fstream F;
F.open("Library.dat",ios::in|ios::out|ios::binary);
Book b;
int bno;
cout<<"Enter bno of book whose bname is to be corrected:";
cin>>bno;
while(F.read((char*)&b,sizeof(b)))
{
if(bno==b.RBno())
{
int j=F.tellg()-sizeof(b);
F.seekp(j);
b.Editbname();
F.write((char*)&b,sizeof(b));
}
}
}
void EditBnameAuthor()
{
fstream F;
F.open("Library.dat",ios::in|ios::out|ios::binary);
Book b;
char author[20];
cout<<"Enter author name of book whose bname is to be
corrected:";
gets(author);
while(F.read((char*)&b,sizeof(b)))
{
if(strcmpi(author,b.RAuthor())==0)
{
int j=F.tellg()-sizeof(b);
F.seekp(j);
b.Editauthor();
F.write((char*)&b,sizeof(b));
}
}
}
void EditBname()
{
int choice;
cout<<"Search by 1) Bno 2) Author"<<endl;
cout<<"Enter choice:";
cin>>choice;
if(choice==1)
EditBnameBno();
else
if(choice==2)
EditBnameAuthor();
}
void EditBnoName()
{
fstream F;
F.open("Library.dat",ios::in|ios::out|ios::binary);
Book b;
char bname[20];
cout<<"Enter bname of book whose bno is to be corrected:";
gets(bname);
while(F.read((char*)&b,sizeof(b)))
{
if(strcmpi(bname,b.RBname())==0)
{
int j=F.tellg()-sizeof(b);
F.seekp(j);
b.Editbno();
F.write((char*)&b,sizeof(b));
}
}
}
void EditBnoAuthor()
{
fstream F;
F.open("Library.dat",ios::in|ios::out|ios::binary);
Book b;
char author[20];
cout<<"Enter author name of book whose bno is to be corrected:";
gets(author);
while(F.read((char*)&b,sizeof(b)))
{
if(strcmpi(author,b.RAuthor())==0)
{
int j=F.tellg()-sizeof(b);
F.seekp(j);
b.Editbno();
F.write((char*)&b,sizeof(b));
}
}
}
void EditBno()
{
int choice;
cout<<"Search by 1)Bname 2)Author"<<endl;
cout<<"Enter choice:";
cin>>choice;
if(choice==1)
EditBnoName();
else
if(choice==2)
EditBnoAuthor();
}
void EditAuthorName()
{
fstream F;
F.open("Library.dat",ios::in|ios::out|ios::binary);
Book b;
char bname[20];
cout<<"Enter bname of book whose author name is to be
corrected:";
gets(bname);
while(F.read((char*)&b,sizeof(b)))
{
if(strcmpi(bname,b.RBname())==0)
{
int j=F.tellg()-sizeof(b);
F.seekp(j);
b.Editauthor();
F.write((char*)&b,sizeof(b));
}
}
}
void EditAuthorBno()
{
fstream F;
F.open("Library.dat",ios::in|ios::out|ios::binary);
Book b;
int bno;
cout<<"Enter bno of book whose author name is to be corrected:";
cin>>bno;
while(F.read((char*)&b,sizeof(b)))
{
if(bno==b.RBno())
{
int j=F.tellg()-sizeof(b);
F.seekp(j);
b.Editauthor();
F.write((char*)&b,sizeof(b));
}
}
}
void EditAuthor()
{
int choice;
cout<<"Search by 1) Bname 2) Bno"<<endl;
cout<<"Enter choice:";
cin>>choice;
if(choice==1)
EditAuthorName();
else
if(choice==2)
EditAuthorBno();
}
void Ebook()
{
int choice;
cout<<"Edit: 1) Bname 2) Bno 3) Author"<<endl;
cout<<"Enter choice:";
cin>>choice;
if(choice==1)
EditBname();
else
if(choice==2)
EditBno();
else
if(choice==3)
EditAuthor();
}
void EditMname()
{
fstream G;
G.open("Members.dat",ios::in|ios::out|ios::binary);
Member m;
int mno;
cout<<"Enter mno of member whose name is to be corrected:";
cin>>mno;
while(G.read((char*)&m,sizeof(m)))
{
if(mno==m.RMno())
{
int j=G.tellg()-sizeof(m);
G.seekp(j);
m.Editmname();
G.write((char*)&m,sizeof(m));
}
}
}
void EditMno()
{
fstream G;
G.open("Members.dat",ios::in|ios::out|ios::binary);
Member m;
char mname[20];
cout<<"Enter mname of member whose mno is to be corrected:";
gets(mname);
while(G.read((char*)&m,sizeof(m)))
{
if(strcmpi(mname,m.RMname())==0)
{
int j=G.tellg()-sizeof(m);
G.seekp(j);
m.Editmno();
G.write((char*)&m,sizeof(m));
}
}
}
void EMem()
{
int choice;
cout<<"Edit: 1)Mname 2)Mno"<<endl;
cout<<"Enter choice:";
cin>>choice;
if(choice==1)
EditMname();
else
if(choice==2)
EditMno();
}
void Add()
{
int choice;
do
{
cout<<"1) Add book 2) Add member 3) Quit"<<endl;
cout<<"Enter choice:";
cin>>choice;
clrscr();
if(choice==1)
AddBook();
else
if(choice==2)
AddMember();
}while(choice!=3);
}
void Display()
{
int choice;
do
{
cout<<"1)Display book 2)Display member 3) Quit"<<endl;
cout<<"Enter choice:";
cin>>choice;
clrscr();
if(choice==1)
DisplayBooks();
else
if(choice==2)
DisplayMem();
}while(choice!=3);
}
void Issue()
{
int choice;
do
{
cout<<"1) Search by Mname 2) Search by Mno 3) Quit"<<endl;
cout<<"Enter choice:";
cin>>choice;
clrscr();
if(choice==1)
IssueMname();
else
if(choice==2)
IssueMno();
}while(choice!=3);
}
void Return()
{
int choice;
do
{
cout<<"1) Search by Mname 2) Search by Mno 3) Quit"<<endl;
cout<<"Enter choice:";
cin>>choice;
clrscr();
if(choice==1)
ReturnMname();
else
if(choice==2)
ReturnMno();
}while(choice!=3);
}
void Search()
{
int choice;
do
{
cout<<"Search and Display"<<endl;
cout<<"1)A book 2)A member 3)Quit"<<endl;
cout<<"Enter choice:";
cin>>choice;
clrscr();
if(choice==1)
SDisBook();
else
if(choice==2)
SDisMem();
}while(choice!=3);
}
void Edit()
{
int choice;
do
{
cout<<"Edit details of"<<endl;
cout<<"1) A book 2) A member 3) Quit"<<endl;
cout<<"Enter choice:";
cin>>choice;
clrscr();
if(choice==1)
Ebook();
else
if(choice==2)
EMem();
}while(choice!=3);
}
void Delete()
{
int choice;
do
{
cout<<"1) Delete book 2) Delete member 3) Quit"<<endl;
cout<<"Enter choice:";
cin>>choice;
if(choice==1)
DeleteBook();
else
if(choice==2)
DeleteMem();
}while (choice!=3);
}
